<?php

/**
 * @file
 * Implementing hook and preprocess functions for content type RECIPE
 */
use Drupal\Core\Database\Database;
// use Drupal\image\Entity\ImageStyle;
use Drupal\Core\Url;

/**
* Implementing hook_preprocess()
*/
// function my_meta_tags_preprocess(&$variables, $hook) {
//   //for debugging
//   var_dump($hook);
// }

/**
 * Implements hook_preprocess_HOOK()
 */
function my_meta_tags_preprocess_html(&$variables) {
  // function for storing some values in array of meta tags only for node pages
  function new_meta_tag($attribute, $name, $result) {
    $new_tag = array(
      array(
        '#tag' => 'meta',
        '#attributes' => 
        array(
          $attribute => $name,
          'content' => $result,
        ),
      ),
      $name,
    );
    
    return $new_tag;
  }
  // returns true if we are on front page
  // $front_page = \Drupal::service('path.matcher')->isFrontPage();
  $node = \Drupal::routeMatch()->getParameter('node');
  $term = \Drupal::routeMatch()->getParameter('taxonomy_term');

  // basic url address www.example.com
  $host = \Drupal::request()->getSchemeAndHttpHost();
  // path of some page
  $path_current = \Drupal::service('path.current')->getPath();
  // alias path that we generated
  $path_alias = \Drupal::service('path.alias_manager')->getAliasByPath(\Drupal::service('path.current')->getPath());
  $url = $host . $path_alias;

  // Name of site
  $site_name = \Drupal::config('system.site')->get('name');

  // Getting title of every page. For taxonomy term pages, we need to override this a little bit.
  $request = \Drupal::request();
  if ($route = $request->attributes->get(\Symfony\Cmf\Component\Routing\RouteObjectInterface::ROUTE_OBJECT)) {
    $title = \Drupal::service('title_resolver')->getTitle($request, $route); 
  }

  $locale = 'en-US';
  $card = 'summary';

  $results = array();
  $new_tag = array();
  // checking if page is node. after that, we checking if node type is 'recipe'
  if ($node != NULL) {
    $title = $title . " | " . $site_name;
    $description = $node->field_meta_description->value;
    if ($node->field_image->entity != NULL) {
      $image = file_create_url($node->field_image->entity->getFileUri());
    }
    // storing node type (recipe) into variable. this type is stored in table by the name 'bundle'
    $type = 'article';
    $results = array(
      new_meta_tag('name', 'robots', 'index, follow'),
      new_meta_tag('name', 'description', $description),
      new_meta_tag('property', 'og:title', $title),
      new_meta_tag('property', 'og:image', $image),
      new_meta_tag('property', 'og:description', $description),
      new_meta_tag('property', 'og:locale', $locale),
      new_meta_tag('property', 'og:site_name', $site_name),
      new_meta_tag('property', 'og:url', $url),
      new_meta_tag('property', 'twitter:card', $card),
      new_meta_tag('property', 'twitter:site', $site_name),
      new_meta_tag('property', 'twitter:title', $title),
      new_meta_tag('property', 'twitter:description', $description),
      new_meta_tag('property', 'twitter:image', $image),
      new_meta_tag('property', 'twitter:url', $url),
    );
    if ($node->getType() == 'recipe') {
      $creator = $node->field_contributed_by->value;
      array_push($results, 
        array(
          new_meta_tag('property', 'og:type', $type),
          new_meta_tag('property', 'twitter:creator', $creator),
        )
      );
    }
  }
  //checking if page is taxnomony term
  elseif ($term != NULL) {
    $path_array = explode('/', $path_current);
    
    if ($path_array[4] == NULL) {
      $title = $title['#markup'] . " | " . $site_name;
      $description = strip_tags($term->field_meta_description->value);

      if ($term->field_term_image != NULL){
        $image = file_create_url($term->field_term_image->entity->getFileUri());
      }
  
      $results = array(
        new_meta_tag('name', 'robots', 'index, follow'),
        new_meta_tag('name', 'description', $description),
        new_meta_tag('property', 'og:title', $title),
        // new_meta_tag('property', 'og:type', 'page'),
        new_meta_tag('property', 'og:image', $image),
        new_meta_tag('property', 'og:description', $description),
        new_meta_tag('property', 'og:locale', $locale),
        new_meta_tag('property', 'og:site_name', $site_name),
        new_meta_tag('property', 'og:url', $url),
        new_meta_tag('property', 'twitter:card', $card),
        new_meta_tag('property', 'twitter:site', $site_name),
        new_meta_tag('property', 'twitter:title', $title),
        new_meta_tag('property', 'twitter:description', $description),
        new_meta_tag('property', 'twitter:image', $image),
        new_meta_tag('property', 'twitter:url', $url),
        // new_meta_tag('property', 'twitter:creator', $creator),
      );
    }
  }

  elseif ($variables['page']['#title'] == 'Contact information') {
    $title = $title . " | " . $site_name;
    $results = array(
      new_meta_tag('name', 'robots', 'index, follow'),
      // new_meta_tag('name', 'description', $description),
      new_meta_tag('property', 'og:title', $title),
      // new_meta_tag('property', 'og:type', 'page'),
      // new_meta_tag('property', 'og:image', $image),
      // new_meta_tag('property', 'og:description', $description),
      new_meta_tag('property', 'og:locale', $locale),
      new_meta_tag('property', 'og:site_name', $site_name),
      new_meta_tag('property', 'og:url', $url),
      new_meta_tag('property', 'twitter:card', $card),
      new_meta_tag('property', 'twitter:site', $site_name),
      new_meta_tag('property', 'twitter:title', $title),
      // new_meta_tag('property', 'twitter:description', $description),
      // new_meta_tag('property', 'twitter:image', $image),
      new_meta_tag('property', 'twitter:url', $url),
      // new_meta_tag('property', 'twitter:creator', $creator),
    );
  }

  elseif ($variables['page']['#title'] == 'Forums') {
    $title = $title . " | " . $site_name;
    $results = array(
      new_meta_tag('name', 'robots', 'index, follow'),
      // new_meta_tag('name', 'description', $description),
      new_meta_tag('property', 'og:title', $title),
      // new_meta_tag('property', 'og:type', 'page'),
      // new_meta_tag('property', 'og:image', $image),
      // new_meta_tag('property', 'og:description', $description),
      new_meta_tag('property', 'og:locale', $locale),
      new_meta_tag('property', 'og:site_name', $site_name),
      new_meta_tag('property', 'og:url', $url),
      new_meta_tag('property', 'twitter:card', $card),
      new_meta_tag('property', 'twitter:site', $site_name),
      new_meta_tag('property', 'twitter:title', $title),
      // new_meta_tag('property', 'twitter:description', $description),
      // new_meta_tag('property', 'twitter:image', $image),
      new_meta_tag('property', 'twitter:url', $url),
      // new_meta_tag('property', 'twitter:creator', $creator),
    );
  }

  foreach ($results as $result) {
    $new_tag = array_push($variables['page']['#attached']['html_head'], $result);
  }

  return $new_tag;
}